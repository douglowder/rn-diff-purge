diff --git a/RnDiffApp/.bundle/config b/RnDiffApp/.bundle/config
new file mode 100644
index 000000000..848943bb5
--- /dev/null
+++ b/RnDiffApp/.bundle/config
@@ -0,0 +1,2 @@
+BUNDLE_PATH: "vendor/bundle"
+BUNDLE_FORCE_RUBY_PLATFORM: 1
diff --git a/RnDiffApp/.flowconfig b/RnDiffApp/.flowconfig
index b274ad1d6..74f3a75e7 100644
--- a/RnDiffApp/.flowconfig
+++ b/RnDiffApp/.flowconfig
@@ -8,13 +8,11 @@
 ; Ignore polyfills
 node_modules/react-native/Libraries/polyfills/.*
 
-; These should not be required directly
-; require from fbjs/lib instead: require('fbjs/lib/warning')
-node_modules/warning/.*
-
 ; Flow doesn't support platforms
 .*/Libraries/Utilities/LoadingView.js
 
+.*/node_modules/resolve/test/resolver/malformed_package_json/package\.json$
+
 [untyped]
 .*/node_modules/@react-native-community/cli/.*/.*
 
@@ -27,8 +25,9 @@ node_modules/react-native/flow/
 [options]
 emoji=true
 
-esproposal.optional_chaining=enable
-esproposal.nullish_coalescing=enable
+exact_by_default=true
+
+format.bracket_spacing=false
 
 module.file_ext=.js
 module.file_ext=.json
@@ -44,10 +43,6 @@ suppress_type=$FlowFixMe
 suppress_type=$FlowFixMeProps
 suppress_type=$FlowFixMeState
 
-suppress_comment=\\(.\\|\n\\)*\\$FlowFixMe\\($\\|[^(]\\|(\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native\\(_ios\\)?_\\(oss\\|fb\\)[a-z,_]*\\)?)\\)
-suppress_comment=\\(.\\|\n\\)*\\$FlowIssue\\((\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native\\(_ios\\)?_\\(oss\\|fb\\)[a-z,_]*\\)?)\\)?:? #[0-9]+
-suppress_comment=\\(.\\|\n\\)*\\$FlowExpectedError
-
 [lints]
 sketchy-null-number=warn
 sketchy-null-mixed=warn
@@ -57,8 +52,6 @@ nonstrict-import=warn
 deprecated-type=warn
 unsafe-getters-setters=warn
 unnecessary-invariant=warn
-signature-verification-failure=warn
-deprecated-utility=error
 
 [strict]
 deprecated-type
@@ -70,4 +63,4 @@ untyped-import
 untyped-type-import
 
 [version]
-^0.122.0
+^0.176.3
diff --git a/RnDiffApp/.gitattributes b/RnDiffApp/.gitattributes
deleted file mode 100644
index d42ff1835..000000000
--- a/RnDiffApp/.gitattributes
+++ /dev/null
@@ -1 +0,0 @@
-*.pbxproj -text
diff --git a/RnDiffApp/.gitignore b/RnDiffApp/.gitignore
index ad572e632..344481b21 100644
--- a/RnDiffApp/.gitignore
+++ b/RnDiffApp/.gitignore
@@ -20,6 +20,7 @@ DerivedData
 *.hmap
 *.ipa
 *.xcuserstate
+ios/.xcode.env.local
 
 # Android/IntelliJ
 #
@@ -28,6 +29,7 @@ build/
 .gradle
 local.properties
 *.iml
+*.hprof
 
 # node.js
 #
@@ -48,12 +50,14 @@ buck-out/
 # For more information about the recommended setup visit:
 # https://docs.fastlane.tools/best-practices/source-control/
 
-*/fastlane/report.xml
-*/fastlane/Preview.html
-*/fastlane/screenshots
+**/fastlane/report.xml
+**/fastlane/Preview.html
+**/fastlane/screenshots
+**/fastlane/test_output
 
 # Bundle artifact
 *.jsbundle
 
-# CocoaPods
+# Ruby / CocoaPods
 /ios/Pods/
+/vendor/bundle/
diff --git a/RnDiffApp/.prettierrc.js b/RnDiffApp/.prettierrc.js
index 5c4de1a4f..2b540746a 100644
--- a/RnDiffApp/.prettierrc.js
+++ b/RnDiffApp/.prettierrc.js
@@ -1,6 +1,7 @@
 module.exports = {
+  arrowParens: 'avoid',
+  bracketSameLine: true,
   bracketSpacing: false,
-  jsxBracketSameLine: true,
   singleQuote: true,
   trailingComma: 'all',
 };
diff --git a/RnDiffApp/.ruby-version b/RnDiffApp/.ruby-version
new file mode 100644
index 000000000..1f7da99d4
--- /dev/null
+++ b/RnDiffApp/.ruby-version
@@ -0,0 +1 @@
+2.7.7
diff --git a/RnDiffApp/App.js b/RnDiffApp/App.js
index a3c673ce3..a378982ee 100644
--- a/RnDiffApp/App.js
+++ b/RnDiffApp/App.js
@@ -7,84 +7,91 @@
  */
 
 import React from 'react';
+import type {Node} from 'react';
 import ReactNative, {
+  Platform,
   SafeAreaView,
-  StyleSheet,
   ScrollView,
-  Platform,
-  View,
+  StatusBar,
+  StyleSheet,
   Text,
+  useColorScheme,
+  View,
 } from 'react-native';
 
 import {
-  Header,
-  LearnMoreLinks,
   Colors,
   DebugInstructions,
+  Header,
+  LearnMoreLinks,
   ReloadInstructions,
 } from 'react-native/Libraries/NewAppScreen';
 
-const StatusBar = Platform.isTV ? View : ReactNative.StatusBar;
+const Section = ({children, title}): Node => {
+  const isDarkMode = useColorScheme() === 'dark';
+  return (
+    <View style={styles.sectionContainer}>
+      <Text
+        style={[
+          styles.sectionTitle,
+          {
+            color: isDarkMode ? Colors.white : Colors.black,
+          },
+        ]}>
+        {title}
+      </Text>
+      <Text
+        style={[
+          styles.sectionDescription,
+          {
+            color: isDarkMode ? Colors.light : Colors.dark,
+          },
+        ]}>
+        {children}
+      </Text>
+    </View>
+  );
+};
+
+const App: () => Node = () => {
+  const isDarkMode = useColorScheme() === 'dark';
+
+  const backgroundStyle = {
+    backgroundColor: isDarkMode ? Colors.darker : Colors.lighter,
+  };
 
-const App: () => React$Node = () => {
   return (
-    <>
-      <StatusBar barStyle="dark-content" />
-      <SafeAreaView>
-        <ScrollView
-          contentInsetAdjustmentBehavior="automatic"
-          style={styles.scrollView}>
-          <Header />
-          {global.HermesInternal == null ? null : (
-            <View style={styles.engine}>
-              <Text style={styles.footer}>Engine: Hermes</Text>
-            </View>
-          )}
-          <View style={styles.body}>
-            <View style={styles.sectionContainer}>
-              <Text style={styles.sectionTitle}>Step One</Text>
-              <Text style={styles.sectionDescription}>
-                Edit <Text style={styles.highlight}>App.js</Text> to change this
-                screen and then come back to see your edits.
-              </Text>
-            </View>
-            <View style={styles.sectionContainer}>
-              <Text style={styles.sectionTitle}>See Your Changes</Text>
-              <Text style={styles.sectionDescription}>
-                <ReloadInstructions />
-              </Text>
-            </View>
-            <View style={styles.sectionContainer}>
-              <Text style={styles.sectionTitle}>Debug</Text>
-              <Text style={styles.sectionDescription}>
-                <DebugInstructions />
-              </Text>
-            </View>
-            <View style={styles.sectionContainer}>
-              <Text style={styles.sectionTitle}>Learn More</Text>
-              <Text style={styles.sectionDescription}>
-                Read the docs to discover what to do next:
-              </Text>
-            </View>
-            <LearnMoreLinks />
-          </View>
-        </ScrollView>
-      </SafeAreaView>
-    </>
+    <SafeAreaView style={backgroundStyle}>
+      <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />
+      <ScrollView
+        contentInsetAdjustmentBehavior="automatic"
+        style={backgroundStyle}>
+        <Header />
+        <View
+          style={{
+            backgroundColor: isDarkMode ? Colors.black : Colors.white,
+          }}>
+          <Section title="Step One">
+            Edit <Text style={styles.highlight}>App.js</Text> to change this
+            screen and then come back to see your edits.
+          </Section>
+          <Section title="See Your Changes">
+            <ReloadInstructions />
+          </Section>
+          <Section title="Debug">
+            <DebugInstructions />
+          </Section>
+          <Section title="Learn More">
+            Read the docs to discover what to do next:
+          </Section>
+          <LearnMoreLinks />
+        </View>
+      </ScrollView>
+    </SafeAreaView>
   );
 };
 
 const styles = StyleSheet.create({
-  scrollView: {
-    backgroundColor: Colors.lighter,
-  },
-  engine: {
-    position: 'absolute',
-    right: 0,
-  },
-  body: {
-    backgroundColor: Colors.white,
-  },
   sectionContainer: {
     marginTop: 32,
     paddingHorizontal: 24,
@@ -92,25 +99,15 @@ const styles = StyleSheet.create({
   sectionTitle: {
     fontSize: 24,
     fontWeight: '600',
-    color: Colors.black,
   },
   sectionDescription: {
     marginTop: 8,
     fontSize: 18,
     fontWeight: '400',
-    color: Colors.dark,
   },
   highlight: {
     fontWeight: '700',
   },
-  footer: {
-    color: Colors.dark,
-    fontSize: 12,
-    fontWeight: '600',
-    padding: 4,
-    paddingRight: 12,
-    textAlign: 'right',
-  },
 });
 
 export default App;
diff --git a/RnDiffApp/Gemfile b/RnDiffApp/Gemfile
new file mode 100644
index 000000000..0ec69cc1f
--- /dev/null
+++ b/RnDiffApp/Gemfile
@@ -0,0 +1,6 @@
+source 'https://rubygems.org'
+
+# You may use http://rbenv.org/ or https://rvm.io/ to install and use this version
+ruby '2.7.7'
+
+gem 'cocoapods', '~> 1.11', '>= 1.11.3'
diff --git a/RnDiffApp/android/app/build.gradle b/RnDiffApp/android/app/build.gradle
index ce0905c89..dc88c2bf1 100644
--- a/RnDiffApp/android/app/build.gradle
+++ b/RnDiffApp/android/app/build.gradle
@@ -1,6 +1,7 @@
 apply plugin: "com.android.application"
 
 import com.android.build.OutputFile
+import org.apache.tools.ant.taskdefs.condition.Os
 
 /**
  * The react.gradle file registers a task for each build variant (e.g. bundleDebugJsAndAssets
@@ -114,19 +115,24 @@ def jscFlavor = 'org.webkit:android-jsc:+'
 /**
  * Whether to enable the Hermes VM.
  *
- * This should be set on project.ext.react and mirrored here.  If it is not set
+ * This should be set on project.ext.react and that value will be read here. If it is not set
  * on project.ext.react, JavaScript will not be compiled to Hermes Bytecode
  * and the benefits of using Hermes will therefore be sharply reduced.
  */
 def enableHermes = project.ext.react.get("enableHermes", false);
 
+/**
+ * Architectures to build native code for.
+ */
+def reactNativeArchitectures() {
+    def value = project.getProperties().get("reactNativeArchitectures")
+    return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
+}
+
 android {
-    compileSdkVersion rootProject.ext.compileSdkVersion
+    ndkVersion rootProject.ext.ndkVersion
 
-    compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
-    }
+    compileSdkVersion rootProject.ext.compileSdkVersion
 
     defaultConfig {
         applicationId "com.rndiffapp"
@@ -134,13 +140,91 @@ android {
         targetSdkVersion rootProject.ext.targetSdkVersion
         versionCode 1
         versionName "1.0"
+        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
+
+        if (isNewArchitectureEnabled()) {
+            // We configure the NDK build only if you decide to opt-in for the New Architecture.
+            externalNativeBuild {
+                ndkBuild {
+                    arguments "APP_PLATFORM=android-21",
+                        "APP_STL=c++_shared",
+                        "NDK_TOOLCHAIN_VERSION=clang",
+                        "GENERATED_SRC_DIR=$buildDir/generated/source",
+                        "PROJECT_BUILD_DIR=$buildDir",
+                        "REACT_ANDROID_DIR=$rootDir/../node_modules/react-native/ReactAndroid",
+                        "REACT_ANDROID_BUILD_DIR=$rootDir/../node_modules/react-native/ReactAndroid/build",
+                        "NODE_MODULES_DIR=$rootDir/../node_modules"
+                    cFlags "-Wall", "-Werror", "-fexceptions", "-frtti", "-DWITH_INSPECTOR=1"
+                    cppFlags "-std=c++17"
+                    // Make sure this target name is the same you specify inside the
+                    // src/main/jni/Android.mk file for the `LOCAL_MODULE` variable.
+                    targets "rndiffapp_appmodules"
+                    // Fix for windows limit on number of character in file paths and in command lines
+                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
+                        arguments "NDK_APP_SHORT_COMMANDS=true"
+                    }
+                }
+            }
+            if (!enableSeparateBuildPerCPUArchitecture) {
+                ndk {
+                    abiFilters (*reactNativeArchitectures())
+                }
+            }
+            if (!enableSeparateBuildPerCPUArchitecture) {
+                ndk {
+                    abiFilters (*reactNativeArchitectures())
+                }
+            }
+        }
+    }
+
+    if (isNewArchitectureEnabled()) {
+        // We configure the NDK build only if you decide to opt-in for the New Architecture.
+        externalNativeBuild {
+            ndkBuild {
+                path "$projectDir/src/main/jni/Android.mk"
+            }
+        }
+        def reactAndroidProjectDir = project(':ReactAndroid').projectDir
+        def packageReactNdkDebugLibs = tasks.register("packageReactNdkDebugLibs", Copy) {
+            dependsOn(":ReactAndroid:packageReactNdkDebugLibsForBuck")
+            from("$reactAndroidProjectDir/src/main/jni/prebuilt/lib")
+            into("$buildDir/react-ndk/exported")
+        }
+        def packageReactNdkReleaseLibs = tasks.register("packageReactNdkReleaseLibs", Copy) {
+            dependsOn(":ReactAndroid:packageReactNdkReleaseLibsForBuck")
+            from("$reactAndroidProjectDir/src/main/jni/prebuilt/lib")
+            into("$buildDir/react-ndk/exported")
+        }
+        afterEvaluate {
+            // If you wish to add a custom TurboModule or component locally,
+            // you should uncomment this line.
+            // preBuild.dependsOn("generateCodegenArtifactsFromSchema")
+            preDebugBuild.dependsOn(packageReactNdkDebugLibs)
+            preReleaseBuild.dependsOn(packageReactNdkReleaseLibs)
+
+            // Due to a bug inside AGP, we have to explicitly set a dependency
+            // between configureNdkBuild* tasks and the preBuild tasks.
+            // This can be removed once this is solved: https://issuetracker.google.com/issues/207403732
+            configureNdkBuildRelease.dependsOn(preReleaseBuild)
+            configureNdkBuildDebug.dependsOn(preDebugBuild)
+            reactNativeArchitectures().each { architecture ->
+                tasks.findByName("configureNdkBuildDebug[${architecture}]")?.configure {
+                    dependsOn("preDebugBuild")
+                }
+                tasks.findByName("configureNdkBuildRelease[${architecture}]")?.configure {
+                    dependsOn("preReleaseBuild")
+                }
+            }
+        }
     }
+
     splits {
         abi {
             reset()
             enable enableSeparateBuildPerCPUArchitecture
             universalApk false  // If true, also generate a universal APK
-            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
+            include (*reactNativeArchitectures())
         }
     }
     signingConfigs {
@@ -169,11 +253,12 @@ android {
         variant.outputs.each { output ->
             // For each separate APK per architecture, set a unique version code as described here:
             // https://developer.android.com/studio/build/configure-apk-splits.html
+            // Example: versionCode 1 will generate 1001 for armeabi-v7a, 1002 for x86, etc.
             def versionCodes = ["armeabi-v7a": 1, "x86": 2, "arm64-v8a": 3, "x86_64": 4]
             def abi = output.getFilter(OutputFile.ABI)
             if (abi != null) {  // null for the universal-debug, universal-release variants
                 output.versionCodeOverride =
-                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
+                        defaultConfig.versionCode * 1000 + versionCodes.get(abi)
             }
 
         }
@@ -182,17 +267,19 @@ android {
 
 dependencies {
     implementation fileTree(dir: "libs", include: ["*.jar"])
+
     //noinspection GradleDynamicVersion
     implementation "com.facebook.react:react-native:+"  // From node_modules
 
     implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"
 
     debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}") {
-      exclude group:'com.facebook.fbjni'
+        exclude group:'com.facebook.fbjni'
     }
 
     debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
         exclude group:'com.facebook.flipper'
+        exclude group:'com.squareup.okhttp3', module:'okhttp'
     }
 
     debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}") {
@@ -200,19 +287,44 @@ dependencies {
     }
 
     if (enableHermes) {
-        def hermesPath = "../../node_modules/hermes-engine/android/";
-        debugImplementation files(hermesPath + "hermes-debug.aar")
-        releaseImplementation files(hermesPath + "hermes-release.aar")
+        //noinspection GradleDynamicVersion
+        implementation("com.facebook.react:hermes-engine:+") { // From node_modules
+            exclude group:'com.facebook.fbjni'
+        }
     } else {
         implementation jscFlavor
     }
 }
 
+if (isNewArchitectureEnabled()) {
+    // If new architecture is enabled, we let you build RN from source
+    // Otherwise we fallback to a prebuilt .aar bundled in the NPM package.
+    // This will be applied to all the imported transtitive dependency.
+    configurations.all {
+        resolutionStrategy.dependencySubstitution {
+            substitute(module("com.facebook.react:react-native"))
+                    .using(project(":ReactAndroid"))
+                    .because("On New Architecture we're building React Native from source")
+            substitute(module("com.facebook.react:hermes-engine"))
+                    .using(project(":ReactAndroid:hermes-engine"))
+                    .because("On New Architecture we're building Hermes from source")
+        }
+    }
+}
+
 // Run this once to be able to run the application with BUCK
 // puts all compile dependencies into folder libs for BUCK to use
 task copyDownloadableDepsToLibs(type: Copy) {
-    from configurations.compile
+    from configurations.implementation
     into 'libs'
 }
 
 apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
+
+def isNewArchitectureEnabled() {
+    // To opt-in for the New Architecture, you can either:
+    // - Set `newArchEnabled` to true inside the `gradle.properties` file
+    // - Invoke gradle with `-newArchEnabled=true`
+    // - Set an environment variable `ORG_GRADLE_PROJECT_newArchEnabled=true`
+    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
+}
diff --git a/RnDiffApp/android/app/src/debug/AndroidManifest.xml b/RnDiffApp/android/app/src/debug/AndroidManifest.xml
index fa26aa56e..4b185bc15 100644
--- a/RnDiffApp/android/app/src/debug/AndroidManifest.xml
+++ b/RnDiffApp/android/app/src/debug/AndroidManifest.xml
@@ -4,5 +4,10 @@
 
     <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
 
-    <application android:usesCleartextTraffic="true" tools:targetApi="28" tools:ignore="GoogleAppIndexingWarning" />
+    <application
+        android:usesCleartextTraffic="true"
+        tools:targetApi="28"
+        tools:ignore="GoogleAppIndexingWarning">
+        <activity android:name="com.facebook.react.devsupport.DevSettingsActivity" android:exported="false" />
+    </application>
 </manifest>
diff --git a/RnDiffApp/android/app/src/debug/java/com/rndiffapp/ReactNativeFlipper.java b/RnDiffApp/android/app/src/debug/java/com/rndiffapp/ReactNativeFlipper.java
index 5c106db4b..b371cfd12 100644
--- a/RnDiffApp/android/app/src/debug/java/com/rndiffapp/ReactNativeFlipper.java
+++ b/RnDiffApp/android/app/src/debug/java/com/rndiffapp/ReactNativeFlipper.java
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * <p>This source code is licensed under the MIT license found in the LICENSE file in the root
  * directory of this source tree.
@@ -19,6 +19,7 @@ import com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor;
 import com.facebook.flipper.plugins.network.NetworkFlipperPlugin;
 import com.facebook.flipper.plugins.react.ReactFlipperPlugin;
 import com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin;
+import com.facebook.react.ReactInstanceEventListener;
 import com.facebook.react.ReactInstanceManager;
 import com.facebook.react.bridge.ReactContext;
 import com.facebook.react.modules.network.NetworkingModule;
@@ -51,7 +52,7 @@ public class ReactNativeFlipper {
       ReactContext reactContext = reactInstanceManager.getCurrentReactContext();
       if (reactContext == null) {
         reactInstanceManager.addReactInstanceEventListener(
-            new ReactInstanceManager.ReactInstanceEventListener() {
+            new ReactInstanceEventListener() {
               @Override
               public void onReactContextInitialized(ReactContext reactContext) {
                 reactInstanceManager.removeReactInstanceEventListener(this);
diff --git a/RnDiffApp/android/app/src/main/AndroidManifest.xml b/RnDiffApp/android/app/src/main/AndroidManifest.xml
index 3e43f2621..53aefc5ba 100644
--- a/RnDiffApp/android/app/src/main/AndroidManifest.xml
+++ b/RnDiffApp/android/app/src/main/AndroidManifest.xml
@@ -3,9 +3,14 @@
 
     <uses-permission android:name="android.permission.INTERNET" />
 
+    <!--
+      android:icon is used to display launcher icon on mobile devices.
+      android:banner is used to display a rectangular banned launcher icon on Android TV devices.
+      -->
     <application
       android:name=".MainApplication"
       android:label="@string/app_name"
+      android:banner="@drawable/tv_banner"
       android:icon="@mipmap/ic_launcher"
       android:roundIcon="@mipmap/ic_launcher_round"
       android:allowBackup="false"
@@ -13,15 +18,16 @@
       <activity
         android:name=".MainActivity"
         android:label="@string/app_name"
-        android:configChanges="keyboard|keyboardHidden|orientation|screenSize|uiMode"
+        android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|screenSize|smallestScreenSize|uiMode"
         android:launchMode="singleTask"
-        android:windowSoftInputMode="adjustResize">
+        android:windowSoftInputMode="adjustResize"
+        android:exported="true">
         <intent-filter>
             <action android:name="android.intent.action.MAIN" />
             <category android:name="android.intent.category.LAUNCHER" />
+            <!-- Needed to properly create a launch intent when running on Android TV -->
+            <category android:name="android.intent.category.LEANBACK_LAUNCHER" />
         </intent-filter>
       </activity>
-      <activity android:name="com.facebook.react.devsupport.DevSettingsActivity" />
     </application>
-
 </manifest>
diff --git a/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainActivity.java b/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainActivity.java
index e325e8cf9..31ae98f7f 100644
--- a/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainActivity.java
+++ b/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainActivity.java
@@ -1,6 +1,8 @@
 package com.rndiffapp;
 
 import com.facebook.react.ReactActivity;
+import com.facebook.react.ReactActivityDelegate;
+import com.facebook.react.ReactRootView;
 
 public class MainActivity extends ReactActivity {
 
@@ -12,4 +14,35 @@ public class MainActivity extends ReactActivity {
   protected String getMainComponentName() {
     return "RnDiffApp";
   }
+
+  /**
+   * Returns the instance of the {@link ReactActivityDelegate}. There the RootView is created and
+   * you can specify the renderer you wish to use - the new renderer (Fabric) or the old renderer
+   * (Paper).
+   */
+  @Override
+  protected ReactActivityDelegate createReactActivityDelegate() {
+    return new MainActivityDelegate(this, getMainComponentName());
+  }
+
+  public static class MainActivityDelegate extends ReactActivityDelegate {
+    public MainActivityDelegate(ReactActivity activity, String mainComponentName) {
+      super(activity, mainComponentName);
+    }
+
+    @Override
+    protected ReactRootView createRootView() {
+      ReactRootView reactRootView = new ReactRootView(getContext());
+      // If you opted-in for the New Architecture, we enable the Fabric Renderer.
+      reactRootView.setIsFabric(BuildConfig.IS_NEW_ARCHITECTURE_ENABLED);
+      return reactRootView;
+    }
+
+    @Override
+    protected boolean isConcurrentRootEnabled() {
+      // If you opted-in for the New Architecture, we enable Concurrent Root (i.e. React 18).
+      // More on this on https://reactjs.org/blog/2022/03/29/react-v18.html
+      return BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;
+    }
+  }
 }
diff --git a/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainApplication.java b/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainApplication.java
index 04df56cf6..dd1f1537c 100644
--- a/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainApplication.java
+++ b/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainApplication.java
@@ -7,7 +7,9 @@ import com.facebook.react.ReactApplication;
 import com.facebook.react.ReactInstanceManager;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
+import com.facebook.react.config.ReactFeatureFlags;
 import com.facebook.soloader.SoLoader;
+import com.rndiffapp.newarchitecture.MainApplicationReactNativeHost;
 import java.lang.reflect.InvocationTargetException;
 import java.util.List;
 
@@ -35,15 +37,28 @@ public class MainApplication extends Application implements ReactApplication {
         }
       };
 
+  private final ReactNativeHost mNewArchitectureNativeHost =
+      new MainApplicationReactNativeHost(this);
+
   @Override
   public ReactNativeHost getReactNativeHost() {
-    return mReactNativeHost;
+    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {
+      return mNewArchitectureNativeHost;
+    } else {
+      return mReactNativeHost;
+    }
   }
 
   @Override
   public void onCreate() {
     super.onCreate();
+    // If you opted-in for the New Architecture, we enable the TurboModule system
+    ReactFeatureFlags.useTurboModules = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;
     SoLoader.init(this, /* native exopackage */ false);
+    // Normally we only send key up events in ReactAndroidHWInputDeviceHelper
+    // Change enableKeyDownEvents to true to send both key down and key up events
+    ReactFeatureFlags.enableKeyDownEvents = false;
+
     initializeFlipper(this, getReactNativeHost().getReactInstanceManager());
   }
 
diff --git a/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/MainApplicationReactNativeHost.java b/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/MainApplicationReactNativeHost.java
new file mode 100644
index 000000000..4f8302218
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/MainApplicationReactNativeHost.java
@@ -0,0 +1,116 @@
+package com.rndiffapp.newarchitecture;
+
+import android.app.Application;
+import androidx.annotation.NonNull;
+import com.facebook.react.PackageList;
+import com.facebook.react.ReactInstanceManager;
+import com.facebook.react.ReactNativeHost;
+import com.facebook.react.ReactPackage;
+import com.facebook.react.ReactPackageTurboModuleManagerDelegate;
+import com.facebook.react.bridge.JSIModulePackage;
+import com.facebook.react.bridge.JSIModuleProvider;
+import com.facebook.react.bridge.JSIModuleSpec;
+import com.facebook.react.bridge.JSIModuleType;
+import com.facebook.react.bridge.JavaScriptContextHolder;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.UIManager;
+import com.facebook.react.fabric.ComponentFactory;
+import com.facebook.react.fabric.CoreComponentsRegistry;
+import com.facebook.react.fabric.FabricJSIModuleProvider;
+import com.facebook.react.fabric.ReactNativeConfig;
+import com.facebook.react.uimanager.ViewManagerRegistry;
+import com.rndiffapp.BuildConfig;
+import com.rndiffapp.newarchitecture.components.MainComponentsRegistry;
+import com.rndiffapp.newarchitecture.modules.MainApplicationTurboModuleManagerDelegate;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * A {@link ReactNativeHost} that helps you load everything needed for the New Architecture, both
+ * TurboModule delegates and the Fabric Renderer.
+ *
+ * <p>Please note that this class is used ONLY if you opt-in for the New Architecture (see the
+ * `newArchEnabled` property). Is ignored otherwise.
+ */
+public class MainApplicationReactNativeHost extends ReactNativeHost {
+  public MainApplicationReactNativeHost(Application application) {
+    super(application);
+  }
+
+  @Override
+  public boolean getUseDeveloperSupport() {
+    return BuildConfig.DEBUG;
+  }
+
+  @Override
+  protected List<ReactPackage> getPackages() {
+    List<ReactPackage> packages = new PackageList(this).getPackages();
+    // Packages that cannot be autolinked yet can be added manually here, for example:
+    //     packages.add(new MyReactNativePackage());
+    // TurboModules must also be loaded here providing a valid TurboReactPackage implementation:
+    //     packages.add(new TurboReactPackage() { ... });
+    // If you have custom Fabric Components, their ViewManagers should also be loaded here
+    // inside a ReactPackage.
+    return packages;
+  }
+
+  @Override
+  protected String getJSMainModuleName() {
+    return "index";
+  }
+
+  @NonNull
+  @Override
+  protected ReactPackageTurboModuleManagerDelegate.Builder
+      getReactPackageTurboModuleManagerDelegateBuilder() {
+    // Here we provide the ReactPackageTurboModuleManagerDelegate Builder. This is necessary
+    // for the new architecture and to use TurboModules correctly.
+    return new MainApplicationTurboModuleManagerDelegate.Builder();
+  }
+
+  @Override
+  protected JSIModulePackage getJSIModulePackage() {
+    return new JSIModulePackage() {
+      @Override
+      public List<JSIModuleSpec> getJSIModules(
+          final ReactApplicationContext reactApplicationContext,
+          final JavaScriptContextHolder jsContext) {
+        final List<JSIModuleSpec> specs = new ArrayList<>();
+
+        // Here we provide a new JSIModuleSpec that will be responsible of providing the
+        // custom Fabric Components.
+        specs.add(
+            new JSIModuleSpec() {
+              @Override
+              public JSIModuleType getJSIModuleType() {
+                return JSIModuleType.UIManager;
+              }
+
+              @Override
+              public JSIModuleProvider<UIManager> getJSIModuleProvider() {
+                final ComponentFactory componentFactory = new ComponentFactory();
+                CoreComponentsRegistry.register(componentFactory);
+
+                // Here we register a Components Registry.
+                // The one that is generated with the template contains no components
+                // and just provides you the one from React Native core.
+                MainComponentsRegistry.register(componentFactory);
+
+                final ReactInstanceManager reactInstanceManager = getReactInstanceManager();
+
+                ViewManagerRegistry viewManagerRegistry =
+                    new ViewManagerRegistry(
+                        reactInstanceManager.getOrCreateViewManagers(reactApplicationContext));
+
+                return new FabricJSIModuleProvider(
+                    reactApplicationContext,
+                    componentFactory,
+                    ReactNativeConfig.DEFAULT_CONFIG,
+                    viewManagerRegistry);
+              }
+            });
+        return specs;
+      }
+    };
+  }
+}
diff --git a/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/components/MainComponentsRegistry.java b/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/components/MainComponentsRegistry.java
new file mode 100644
index 000000000..cdacb68ed
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/components/MainComponentsRegistry.java
@@ -0,0 +1,36 @@
+package com.rndiffapp.newarchitecture.components;
+
+import com.facebook.jni.HybridData;
+import com.facebook.proguard.annotations.DoNotStrip;
+import com.facebook.react.fabric.ComponentFactory;
+import com.facebook.soloader.SoLoader;
+
+/**
+ * Class responsible to load the custom Fabric Components. This class has native methods and needs a
+ * corresponding C++ implementation/header file to work correctly (already placed inside the jni/
+ * folder for you).
+ *
+ * <p>Please note that this class is used ONLY if you opt-in for the New Architecture (see the
+ * `newArchEnabled` property). Is ignored otherwise.
+ */
+@DoNotStrip
+public class MainComponentsRegistry {
+  static {
+    SoLoader.loadLibrary("fabricjni");
+  }
+
+  @DoNotStrip private final HybridData mHybridData;
+
+  @DoNotStrip
+  private native HybridData initHybrid(ComponentFactory componentFactory);
+
+  @DoNotStrip
+  private MainComponentsRegistry(ComponentFactory componentFactory) {
+    mHybridData = initHybrid(componentFactory);
+  }
+
+  @DoNotStrip
+  public static MainComponentsRegistry register(ComponentFactory componentFactory) {
+    return new MainComponentsRegistry(componentFactory);
+  }
+}
diff --git a/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/modules/MainApplicationTurboModuleManagerDelegate.java b/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/modules/MainApplicationTurboModuleManagerDelegate.java
new file mode 100644
index 000000000..10275588e
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/modules/MainApplicationTurboModuleManagerDelegate.java
@@ -0,0 +1,48 @@
+package com.rndiffapp.newarchitecture.modules;
+
+import com.facebook.jni.HybridData;
+import com.facebook.react.ReactPackage;
+import com.facebook.react.ReactPackageTurboModuleManagerDelegate;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.soloader.SoLoader;
+import java.util.List;
+
+/**
+ * Class responsible to load the TurboModules. This class has native methods and needs a
+ * corresponding C++ implementation/header file to work correctly (already placed inside the jni/
+ * folder for you).
+ *
+ * <p>Please note that this class is used ONLY if you opt-in for the New Architecture (see the
+ * `newArchEnabled` property). Is ignored otherwise.
+ */
+public class MainApplicationTurboModuleManagerDelegate
+    extends ReactPackageTurboModuleManagerDelegate {
+
+  private static volatile boolean sIsSoLibraryLoaded;
+
+  protected MainApplicationTurboModuleManagerDelegate(
+      ReactApplicationContext reactApplicationContext, List<ReactPackage> packages) {
+    super(reactApplicationContext, packages);
+  }
+
+  protected native HybridData initHybrid();
+
+  native boolean canCreateTurboModule(String moduleName);
+
+  public static class Builder extends ReactPackageTurboModuleManagerDelegate.Builder {
+    protected MainApplicationTurboModuleManagerDelegate build(
+        ReactApplicationContext context, List<ReactPackage> packages) {
+      return new MainApplicationTurboModuleManagerDelegate(context, packages);
+    }
+  }
+
+  @Override
+  protected synchronized void maybeLoadOtherSoLibraries() {
+    if (!sIsSoLibraryLoaded) {
+      // If you change the name of your application .so file in the Android.mk file,
+      // make sure you update the name here as well.
+      SoLoader.loadLibrary("rndiffapp_appmodules");
+      sIsSoLibraryLoaded = true;
+    }
+  }
+}
diff --git a/RnDiffApp/android/app/src/main/jni/Android.mk b/RnDiffApp/android/app/src/main/jni/Android.mk
new file mode 100644
index 000000000..842579d5e
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/Android.mk
@@ -0,0 +1,48 @@
+THIS_DIR := $(call my-dir)
+
+include $(REACT_ANDROID_DIR)/Android-prebuilt.mk
+
+# If you wish to add a custom TurboModule or Fabric component in your app you
+# will have to include the following autogenerated makefile.
+# include $(GENERATED_SRC_DIR)/codegen/jni/Android.mk
+include $(CLEAR_VARS)
+
+LOCAL_PATH := $(THIS_DIR)
+
+# You can customize the name of your application .so file here.
+LOCAL_MODULE := rndiffapp_appmodules
+
+LOCAL_C_INCLUDES := $(LOCAL_PATH)
+LOCAL_SRC_FILES := $(wildcard $(LOCAL_PATH)/*.cpp)
+LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)
+
+# If you wish to add a custom TurboModule or Fabric component in your app you
+# will have to uncomment those lines to include the generated source
+# files from the codegen (placed in $(GENERATED_SRC_DIR)/codegen/jni)
+#
+# LOCAL_C_INCLUDES += $(GENERATED_SRC_DIR)/codegen/jni
+# LOCAL_SRC_FILES += $(wildcard $(GENERATED_SRC_DIR)/codegen/jni/*.cpp)
+# LOCAL_EXPORT_C_INCLUDES += $(GENERATED_SRC_DIR)/codegen/jni
+
+# Here you should add any native library you wish to depend on.
+LOCAL_SHARED_LIBRARIES := \
+  libfabricjni \
+  libfbjni \
+  libfolly_runtime \
+  libglog \
+  libjsi \
+  libreact_codegen_rncore \
+  libreact_debug \
+  libreact_nativemodule_core \
+  libreact_render_componentregistry \
+  libreact_render_core \
+  libreact_render_debug \
+  libreact_render_graphics \
+  librrc_view \
+  libruntimeexecutor \
+  libturbomodulejsijni \
+  libyoga
+
+LOCAL_CFLAGS := -DLOG_TAG=\"ReactNative\" -fexceptions -frtti -std=c++17 -Wall
+
+include $(BUILD_SHARED_LIBRARY)
diff --git a/RnDiffApp/android/app/src/main/jni/MainApplicationModuleProvider.cpp b/RnDiffApp/android/app/src/main/jni/MainApplicationModuleProvider.cpp
new file mode 100644
index 000000000..0ac23cc62
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/MainApplicationModuleProvider.cpp
@@ -0,0 +1,24 @@
+#include "MainApplicationModuleProvider.h"
+
+#include <rncore.h>
+
+namespace facebook {
+namespace react {
+
+std::shared_ptr<TurboModule> MainApplicationModuleProvider(
+    const std::string moduleName,
+    const JavaTurboModule::InitParams &params) {
+  // Here you can provide your own module provider for TurboModules coming from
+  // either your application or from external libraries. The approach to follow
+  // is similar to the following (for a library called `samplelibrary`:
+  //
+  // auto module = samplelibrary_ModuleProvider(moduleName, params);
+  // if (module != nullptr) {
+  //    return module;
+  // }
+  // return rncore_ModuleProvider(moduleName, params);
+  return rncore_ModuleProvider(moduleName, params);
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/RnDiffApp/android/app/src/main/jni/MainApplicationModuleProvider.h b/RnDiffApp/android/app/src/main/jni/MainApplicationModuleProvider.h
new file mode 100644
index 000000000..0fa43fa69
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/MainApplicationModuleProvider.h
@@ -0,0 +1,16 @@
+#pragma once
+
+#include <memory>
+#include <string>
+
+#include <ReactCommon/JavaTurboModule.h>
+
+namespace facebook {
+namespace react {
+
+std::shared_ptr<TurboModule> MainApplicationModuleProvider(
+    const std::string moduleName,
+    const JavaTurboModule::InitParams &params);
+
+} // namespace react
+} // namespace facebook
diff --git a/RnDiffApp/android/app/src/main/jni/MainApplicationTurboModuleManagerDelegate.cpp b/RnDiffApp/android/app/src/main/jni/MainApplicationTurboModuleManagerDelegate.cpp
new file mode 100644
index 000000000..dbbdc3d13
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/MainApplicationTurboModuleManagerDelegate.cpp
@@ -0,0 +1,45 @@
+#include "MainApplicationTurboModuleManagerDelegate.h"
+#include "MainApplicationModuleProvider.h"
+
+namespace facebook {
+namespace react {
+
+jni::local_ref<MainApplicationTurboModuleManagerDelegate::jhybriddata>
+MainApplicationTurboModuleManagerDelegate::initHybrid(
+    jni::alias_ref<jhybridobject>) {
+  return makeCxxInstance();
+}
+
+void MainApplicationTurboModuleManagerDelegate::registerNatives() {
+  registerHybrid({
+      makeNativeMethod(
+          "initHybrid", MainApplicationTurboModuleManagerDelegate::initHybrid),
+      makeNativeMethod(
+          "canCreateTurboModule",
+          MainApplicationTurboModuleManagerDelegate::canCreateTurboModule),
+  });
+}
+
+std::shared_ptr<TurboModule>
+MainApplicationTurboModuleManagerDelegate::getTurboModule(
+    const std::string name,
+    const std::shared_ptr<CallInvoker> jsInvoker) {
+  // Not implemented yet: provide pure-C++ NativeModules here.
+  return nullptr;
+}
+
+std::shared_ptr<TurboModule>
+MainApplicationTurboModuleManagerDelegate::getTurboModule(
+    const std::string name,
+    const JavaTurboModule::InitParams &params) {
+  return MainApplicationModuleProvider(name, params);
+}
+
+bool MainApplicationTurboModuleManagerDelegate::canCreateTurboModule(
+    std::string name) {
+  return getTurboModule(name, nullptr) != nullptr ||
+      getTurboModule(name, {.moduleName = name}) != nullptr;
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/RnDiffApp/android/app/src/main/jni/MainApplicationTurboModuleManagerDelegate.h b/RnDiffApp/android/app/src/main/jni/MainApplicationTurboModuleManagerDelegate.h
new file mode 100644
index 000000000..aabec53aa
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/MainApplicationTurboModuleManagerDelegate.h
@@ -0,0 +1,38 @@
+#include <memory>
+#include <string>
+
+#include <ReactCommon/TurboModuleManagerDelegate.h>
+#include <fbjni/fbjni.h>
+
+namespace facebook {
+namespace react {
+
+class MainApplicationTurboModuleManagerDelegate
+    : public jni::HybridClass<
+          MainApplicationTurboModuleManagerDelegate,
+          TurboModuleManagerDelegate> {
+ public:
+  // Adapt it to the package you used for your Java class.
+  static constexpr auto kJavaDescriptor =
+      "Lcom/rndiffapp/newarchitecture/modules/MainApplicationTurboModuleManagerDelegate;";
+
+  static jni::local_ref<jhybriddata> initHybrid(jni::alias_ref<jhybridobject>);
+
+  static void registerNatives();
+
+  std::shared_ptr<TurboModule> getTurboModule(
+      const std::string name,
+      const std::shared_ptr<CallInvoker> jsInvoker) override;
+  std::shared_ptr<TurboModule> getTurboModule(
+      const std::string name,
+      const JavaTurboModule::InitParams &params) override;
+
+  /**
+   * Test-only method. Allows user to verify whether a TurboModule can be
+   * created by instances of this class.
+   */
+  bool canCreateTurboModule(std::string name);
+};
+
+} // namespace react
+} // namespace facebook
diff --git a/RnDiffApp/android/app/src/main/jni/MainComponentsRegistry.cpp b/RnDiffApp/android/app/src/main/jni/MainComponentsRegistry.cpp
new file mode 100644
index 000000000..8f7edffd6
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/MainComponentsRegistry.cpp
@@ -0,0 +1,61 @@
+#include "MainComponentsRegistry.h"
+
+#include <CoreComponentsRegistry.h>
+#include <fbjni/fbjni.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+#include <react/renderer/components/rncore/ComponentDescriptors.h>
+
+namespace facebook {
+namespace react {
+
+MainComponentsRegistry::MainComponentsRegistry(ComponentFactory *delegate) {}
+
+std::shared_ptr<ComponentDescriptorProviderRegistry const>
+MainComponentsRegistry::sharedProviderRegistry() {
+  auto providerRegistry = CoreComponentsRegistry::sharedProviderRegistry();
+
+  // Custom Fabric Components go here. You can register custom
+  // components coming from your App or from 3rd party libraries here.
+  //
+  // providerRegistry->add(concreteComponentDescriptorProvider<
+  //        AocViewerComponentDescriptor>());
+  return providerRegistry;
+}
+
+jni::local_ref<MainComponentsRegistry::jhybriddata>
+MainComponentsRegistry::initHybrid(
+    jni::alias_ref<jclass>,
+    ComponentFactory *delegate) {
+  auto instance = makeCxxInstance(delegate);
+
+  auto buildRegistryFunction =
+      [](EventDispatcher::Weak const &eventDispatcher,
+         ContextContainer::Shared const &contextContainer)
+      -> ComponentDescriptorRegistry::Shared {
+    auto registry = MainComponentsRegistry::sharedProviderRegistry()
+                        ->createComponentDescriptorRegistry(
+                            {eventDispatcher, contextContainer});
+
+    auto mutableRegistry =
+        std::const_pointer_cast<ComponentDescriptorRegistry>(registry);
+
+    mutableRegistry->setFallbackComponentDescriptor(
+        std::make_shared<UnimplementedNativeViewComponentDescriptor>(
+            ComponentDescriptorParameters{
+                eventDispatcher, contextContainer, nullptr}));
+
+    return registry;
+  };
+
+  delegate->buildRegistryFunction = buildRegistryFunction;
+  return instance;
+}
+
+void MainComponentsRegistry::registerNatives() {
+  registerHybrid({
+      makeNativeMethod("initHybrid", MainComponentsRegistry::initHybrid),
+  });
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/RnDiffApp/android/app/src/main/jni/MainComponentsRegistry.h b/RnDiffApp/android/app/src/main/jni/MainComponentsRegistry.h
new file mode 100644
index 000000000..04e3d5786
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/MainComponentsRegistry.h
@@ -0,0 +1,32 @@
+#pragma once
+
+#include <ComponentFactory.h>
+#include <fbjni/fbjni.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+#include <react/renderer/componentregistry/ComponentDescriptorRegistry.h>
+
+namespace facebook {
+namespace react {
+
+class MainComponentsRegistry
+    : public facebook::jni::HybridClass<MainComponentsRegistry> {
+ public:
+  // Adapt it to the package you used for your Java class.
+  constexpr static auto kJavaDescriptor =
+      "Lcom/rndiffapp/newarchitecture/components/MainComponentsRegistry;";
+
+  static void registerNatives();
+
+  MainComponentsRegistry(ComponentFactory *delegate);
+
+ private:
+  static std::shared_ptr<ComponentDescriptorProviderRegistry const>
+  sharedProviderRegistry();
+
+  static jni::local_ref<jhybriddata> initHybrid(
+      jni::alias_ref<jclass>,
+      ComponentFactory *delegate);
+};
+
+} // namespace react
+} // namespace facebook
diff --git a/RnDiffApp/android/app/src/main/jni/OnLoad.cpp b/RnDiffApp/android/app/src/main/jni/OnLoad.cpp
new file mode 100644
index 000000000..c569b6e86
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/OnLoad.cpp
@@ -0,0 +1,11 @@
+#include <fbjni/fbjni.h>
+#include "MainApplicationTurboModuleManagerDelegate.h"
+#include "MainComponentsRegistry.h"
+
+JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *vm, void *) {
+  return facebook::jni::initialize(vm, [] {
+    facebook::react::MainApplicationTurboModuleManagerDelegate::
+        registerNatives();
+    facebook::react::MainComponentsRegistry::registerNatives();
+  });
+}
diff --git a/RnDiffApp/android/app/src/main/res/drawable/rn_edit_text_material.xml b/RnDiffApp/android/app/src/main/res/drawable/rn_edit_text_material.xml
new file mode 100644
index 000000000..f35d99620
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/res/drawable/rn_edit_text_material.xml
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2014 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<inset xmlns:android="http://schemas.android.com/apk/res/android"
+       android:insetLeft="@dimen/abc_edit_text_inset_horizontal_material"
+       android:insetRight="@dimen/abc_edit_text_inset_horizontal_material"
+       android:insetTop="@dimen/abc_edit_text_inset_top_material"
+       android:insetBottom="@dimen/abc_edit_text_inset_bottom_material">
+
+    <selector>
+        <!-- 
+          This file is a copy of abc_edit_text_material (https://bit.ly/3k8fX7I).
+          The item below with state_pressed="false" and state_focused="false" causes a NullPointerException.
+          NullPointerException:tempt to invoke virtual method 'android.graphics.drawable.Drawable android.graphics.drawable.Drawable$ConstantState.newDrawable(android.content.res.Resources)'
+
+          <item android:state_pressed="false" android:state_focused="false" android:drawable="@drawable/abc_textfield_default_mtrl_alpha"/>
+
+          For more info, see https://bit.ly/3CdLStv (react-native/pull/29452) and https://bit.ly/3nxOMoR.
+        -->
+        <item android:state_enabled="false" android:drawable="@drawable/abc_textfield_default_mtrl_alpha"/>
+        <item android:drawable="@drawable/abc_textfield_activated_mtrl_alpha"/>
+    </selector>
+
+</inset>
diff --git a/RnDiffApp/android/app/src/main/res/drawable/tv_banner.png b/RnDiffApp/android/app/src/main/res/drawable/tv_banner.png
new file mode 100644
index 0000000000000000000000000000000000000000..35080c180b5fb904e92fcf16332921d07b80b7f4
GIT binary patch
literal 28517
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
P@HlC4g&)<ThC%-agtEZ;

literal 0
HcmV?d00001

diff --git a/RnDiffApp/android/app/src/main/res/values/styles.xml b/RnDiffApp/android/app/src/main/res/values/styles.xml
index 62fe59fa4..7ba83a2ad 100644
--- a/RnDiffApp/android/app/src/main/res/values/styles.xml
+++ b/RnDiffApp/android/app/src/main/res/values/styles.xml
@@ -1,9 +1,9 @@
 <resources>
 
     <!-- Base application theme. -->
-    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
+    <style name="AppTheme" parent="Theme.AppCompat.DayNight.NoActionBar">
         <!-- Customize your theme here. -->
-        <item name="android:textColor">#000000</item>
+        <item name="android:editTextBackground">@drawable/rn_edit_text_material</item>
     </style>
 
 </resources>
diff --git a/RnDiffApp/android/build.gradle b/RnDiffApp/android/build.gradle
index ed5a56842..c9bc539de 100644
--- a/RnDiffApp/android/build.gradle
+++ b/RnDiffApp/android/build.gradle
@@ -1,18 +1,30 @@
+import org.apache.tools.ant.taskdefs.condition.Os
+
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 
 buildscript {
     ext {
-        buildToolsVersion = "29.0.2"
-        minSdkVersion = 16
-        compileSdkVersion = 29
-        targetSdkVersion = 29
+        buildToolsVersion = "31.0.0"
+        minSdkVersion = 21
+        compileSdkVersion = 31
+        targetSdkVersion = 31
+
+        if (System.properties['os.arch'] == "aarch64") {
+            // For M1 Users we need to use the NDK 24 which added support for aarch64
+            ndkVersion = "24.0.8215888"
+        } else {
+            // Otherwise we default to the side-by-side NDK version from AGP.
+            ndkVersion = "21.4.7075529"
+        }
     }
     repositories {
         google()
-        jcenter()
+        mavenCentral()
     }
     dependencies {
-        classpath("com.android.tools.build:gradle:3.5.3")
+        classpath("com.android.tools.build:gradle:7.1.1")
+        classpath("com.facebook.react:react-native-gradle-plugin")
+        classpath("de.undercouch:gradle-download-task:5.0.1")
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
     }
@@ -20,7 +32,6 @@ buildscript {
 
 allprojects {
     repositories {
-        mavenLocal()
         maven {
             // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
             url("$rootDir/../node_modules/react-native/android")
@@ -29,9 +40,14 @@ allprojects {
             // Android JSC is installed from npm
             url("$rootDir/../node_modules/jsc-android/dist")
         }
-
+        mavenCentral {
+            // We don't want to fetch react-native from Maven Central as there are
+            // older versions over there.
+            content {
+                excludeGroup "com.facebook.react"
+            }
+        }
         google()
-        jcenter()
         maven { url 'https://www.jitpack.io' }
     }
 }
diff --git a/RnDiffApp/android/gradle.properties b/RnDiffApp/android/gradle.properties
index 04ca0ef29..b5b17fb91 100644
--- a/RnDiffApp/android/gradle.properties
+++ b/RnDiffApp/android/gradle.properties
@@ -9,8 +9,8 @@
 
 # Specifies the JVM arguments used for the daemon process.
 # The setting is particularly useful for tweaking memory settings.
-# Default value: -Xmx10248m -XX:MaxPermSize=256m
-# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
+# Default value: -Xmx512m -XX:MaxMetaspaceSize=256m
+org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=1024m
 
 # When configured, Gradle will run in incubating parallel mode.
 # This option should only be used with decoupled projects. More details, visit
@@ -25,4 +25,16 @@ android.useAndroidX=true
 android.enableJetifier=true
 
 # Version of flipper SDK to use with React Native
-FLIPPER_VERSION=0.37.0
+FLIPPER_VERSION=0.125.0
+
+# Use this property to specify which architecture you want to build.
+# You can also override it from the CLI using
+# ./gradlew <task> -PreactNativeArchitectures=x86_64
+reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64
+
+# Use this property to enable support to the new architecture.
+# This will allow you to use TurboModules and the Fabric render in
+# your application. You should enable this flag either if you want
+# to write custom TurboModules/Fabric components OR use libraries that
+# are providing them.
+newArchEnabled=false
diff --git a/RnDiffApp/android/gradle/wrapper/gradle-wrapper.jar b/RnDiffApp/android/gradle/wrapper/gradle-wrapper.jar
index f3d88b1c2faf2fc91d853cd5d4242b5547257070..7454180f2ae8848c63b8b4dea2cb829da983f2fa 100644
GIT binary patch
delta 18411
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
Hzh{2~$&vlj

delta 17345
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
QW2~J&pQ{+#&jH5%0<2&hD*ylh

diff --git a/RnDiffApp/android/gradle/wrapper/gradle-wrapper.properties b/RnDiffApp/android/gradle/wrapper/gradle-wrapper.properties
index 842267020..669386b87 100644
--- a/RnDiffApp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/RnDiffApp/android/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.2-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-7.3.3-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/RnDiffApp/android/gradlew b/RnDiffApp/android/gradlew
index 2fe81a7d9..1b6c78733 100755
--- a/RnDiffApp/android/gradlew
+++ b/RnDiffApp/android/gradlew
@@ -1,7 +1,7 @@
-#!/usr/bin/env sh
+#!/bin/sh
 
 #
-# Copyright 2015 the original author or authors.
+# Copyright © 2015-2021 the original authors.
 #
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
@@ -17,78 +17,113 @@
 #
 
 ##############################################################################
-##
-##  Gradle start up script for UN*X
-##
+#
+#   Gradle start up script for POSIX generated by Gradle.
+#
+#   Important for running:
+#
+#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
+#       noncompliant, but you have some other compliant shell such as ksh or
+#       bash, then to run this script, type that shell name before the whole
+#       command line, like:
+#
+#           ksh Gradle
+#
+#       Busybox and similar reduced shells will NOT work, because this script
+#       requires all of these POSIX shell features:
+#         * functions;
+#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
+#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
+#         * compound commands having a testable exit status, especially «case»;
+#         * various built-in commands including «command», «set», and «ulimit».
+#
+#   Important for patching:
+#
+#   (2) This script targets any POSIX shell, so it avoids extensions provided
+#       by Bash, Ksh, etc; in particular arrays are avoided.
+#
+#       The "traditional" practice of packing multiple parameters into a
+#       space-separated string is a well documented source of bugs and security
+#       problems, so this is (mostly) avoided, by progressively accumulating
+#       options in "$@", and eventually passing that to Java.
+#
+#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
+#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;
+#       see the in-line comments for details.
+#
+#       There are tweaks for specific operating systems such as AIX, CygWin,
+#       Darwin, MinGW, and NonStop.
+#
+#   (3) This script is generated from the Groovy template
+#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
+#       within the Gradle project.
+#
+#       You can find Gradle at https://github.com/gradle/gradle/.
+#
 ##############################################################################
 
 # Attempt to set APP_HOME
+
 # Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
+app_path=$0
+
+# Need this for daisy-chained symlinks.
+while
+    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
+    [ -h "$app_path" ]
+do
+    ls=$( ls -ld "$app_path" )
+    link=${ls#*' -> '}
+    case $link in             #(
+      /*)   app_path=$link ;; #(
+      *)    app_path=$APP_HOME$link ;;
+    esac
 done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >/dev/null
-APP_HOME="`pwd -P`"
-cd "$SAVED" >/dev/null
+
+APP_HOME=$( cd "${APP_HOME:-./}" && pwd -P ) || exit
 
 APP_NAME="Gradle"
-APP_BASE_NAME=`basename "$0"`
+APP_BASE_NAME=${0##*/}
 
 # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
 DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
 
 # Use the maximum available, or set MAX_FD != -1 to use that value.
-MAX_FD="maximum"
+MAX_FD=maximum
 
 warn () {
     echo "$*"
-}
+} >&2
 
 die () {
     echo
     echo "$*"
     echo
     exit 1
-}
+} >&2
 
 # OS specific support (must be 'true' or 'false').
 cygwin=false
 msys=false
 darwin=false
 nonstop=false
-case "`uname`" in
-  CYGWIN* )
-    cygwin=true
-    ;;
-  Darwin* )
-    darwin=true
-    ;;
-  MINGW* )
-    msys=true
-    ;;
-  NONSTOP* )
-    nonstop=true
-    ;;
+case "$( uname )" in                #(
+  CYGWIN* )         cygwin=true  ;; #(
+  Darwin* )         darwin=true  ;; #(
+  MSYS* | MINGW* )  msys=true    ;; #(
+  NONSTOP* )        nonstop=true ;;
 esac
 
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
+
 # Determine the Java command to use to start the JVM.
 if [ -n "$JAVA_HOME" ] ; then
     if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
         # IBM's JDK on AIX uses strange locations for the executables
-        JAVACMD="$JAVA_HOME/jre/sh/java"
+        JAVACMD=$JAVA_HOME/jre/sh/java
     else
-        JAVACMD="$JAVA_HOME/bin/java"
+        JAVACMD=$JAVA_HOME/bin/java
     fi
     if [ ! -x "$JAVACMD" ] ; then
         die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
@@ -97,7 +132,7 @@ Please set the JAVA_HOME variable in your environment to match the
 location of your Java installation."
     fi
 else
-    JAVACMD="java"
+    JAVACMD=java
     which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
 
 Please set the JAVA_HOME variable in your environment to match the
@@ -105,79 +140,95 @@ location of your Java installation."
 fi
 
 # Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
-    MAX_FD_LIMIT=`ulimit -H -n`
-    if [ $? -eq 0 ] ; then
-        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
-            MAX_FD="$MAX_FD_LIMIT"
-        fi
-        ulimit -n $MAX_FD
-        if [ $? -ne 0 ] ; then
-            warn "Could not set maximum file descriptor limit: $MAX_FD"
-        fi
-    else
-        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
-    fi
+if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
+    case $MAX_FD in #(
+      max*)
+        MAX_FD=$( ulimit -H -n ) ||
+            warn "Could not query maximum file descriptor limit"
+    esac
+    case $MAX_FD in  #(
+      '' | soft) :;; #(
+      *)
+        ulimit -n "$MAX_FD" ||
+            warn "Could not set maximum file descriptor limit to $MAX_FD"
+    esac
 fi
 
-# For Darwin, add options to specify how the application appears in the dock
-if $darwin; then
-    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
-fi
+# Collect all arguments for the java command, stacking in reverse order:
+#   * args from the command line
+#   * the main class name
+#   * -classpath
+#   * -D...appname settings
+#   * --module-path (only if needed)
+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.
 
 # For Cygwin or MSYS, switch paths to Windows format before running java
-if [ "$cygwin" = "true" -o "$msys" = "true" ] ; then
-    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
-    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
-    JAVACMD=`cygpath --unix "$JAVACMD"`
-
-    # We build the pattern for arguments to be converted via cygpath
-    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
-    SEP=""
-    for dir in $ROOTDIRSRAW ; do
-        ROOTDIRS="$ROOTDIRS$SEP$dir"
-        SEP="|"
-    done
-    OURCYGPATTERN="(^($ROOTDIRS))"
-    # Add a user-defined pattern to the cygpath arguments
-    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
-        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
-    fi
+if "$cygwin" || "$msys" ; then
+    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
+    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )
+
+    JAVACMD=$( cygpath --unix "$JAVACMD" )
+
     # Now convert the arguments - kludge to limit ourselves to /bin/sh
-    i=0
-    for arg in "$@" ; do
-        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
-        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
-
-        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
-            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
-        else
-            eval `echo args$i`="\"$arg\""
+    for arg do
+        if
+            case $arg in                                #(
+              -*)   false ;;                            # don't mess with options #(
+              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
+                    [ -e "$t" ] ;;                      #(
+              *)    false ;;
+            esac
+        then
+            arg=$( cygpath --path --ignore --mixed "$arg" )
         fi
-        i=`expr $i + 1`
+        # Roll the args list around exactly as many times as the number of
+        # args, so each arg winds up back in the position where it started, but
+        # possibly modified.
+        #
+        # NB: a `for` loop captures its iteration list before it begins, so
+        # changing the positional parameters here affects neither the number of
+        # iterations, nor the values presented in `arg`.
+        shift                   # remove old arg
+        set -- "$@" "$arg"      # push replacement arg
     done
-    case $i in
-        0) set -- ;;
-        1) set -- "$args0" ;;
-        2) set -- "$args0" "$args1" ;;
-        3) set -- "$args0" "$args1" "$args2" ;;
-        4) set -- "$args0" "$args1" "$args2" "$args3" ;;
-        5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
-        6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
-        7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
-        8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
-        9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
-    esac
 fi
 
-# Escape application args
-save () {
-    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
-    echo " "
-}
-APP_ARGS=`save "$@"`
+# Collect all arguments for the java command;
+#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of
+#     shell script including quotes and variable substitutions, so put them in
+#     double quotes to make sure that they get re-expanded; and
+#   * put everything else in single quotes, so that it's not re-expanded.
+
+set -- \
+        "-Dorg.gradle.appname=$APP_BASE_NAME" \
+        -classpath "$CLASSPATH" \
+        org.gradle.wrapper.GradleWrapperMain \
+        "$@"
+
+# Use "xargs" to parse quoted args.
+#
+# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
+#
+# In Bash we could simply go:
+#
+#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
+#   set -- "${ARGS[@]}" "$@"
+#
+# but POSIX shell has neither arrays nor command substitution, so instead we
+# post-process each arg (as a line of input to sed) to backslash-escape any
+# character that might be a shell metacharacter, then use eval to reverse
+# that process (while maintaining the separation between arguments), and wrap
+# the whole thing up as a single "set" statement.
+#
+# This will of course break if any of these variables contains a newline or
+# an unmatched quote.
+#
 
-# Collect all arguments for the java command, following the shell quoting and substitution rules
-eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
+eval "set -- $(
+        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS" |
+        xargs -n1 |
+        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
+        tr '\n' ' '
+    )" '"$@"'
 
 exec "$JAVACMD" "$@"
diff --git a/RnDiffApp/android/gradlew.bat b/RnDiffApp/android/gradlew.bat
index 62bd9b9cc..107acd32c 100644
--- a/RnDiffApp/android/gradlew.bat
+++ b/RnDiffApp/android/gradlew.bat
@@ -40,7 +40,7 @@ if defined JAVA_HOME goto findJavaFromJavaHome
 
 set JAVA_EXE=java.exe
 %JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
+if "%ERRORLEVEL%" == "0" goto execute
 
 echo.
 echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
@@ -54,7 +54,7 @@ goto fail
 set JAVA_HOME=%JAVA_HOME:"=%
 set JAVA_EXE=%JAVA_HOME%/bin/java.exe
 
-if exist "%JAVA_EXE%" goto init
+if exist "%JAVA_EXE%" goto execute
 
 echo.
 echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
@@ -64,28 +64,14 @@ echo location of your Java installation.
 
 goto fail
 
-:init
-@rem Get command-line arguments, handling Windows variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-
 :execute
 @rem Setup the command line
 
 set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
 
+
 @rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %*
 
 :end
 @rem End local scope for the variables with windows NT shell
diff --git a/RnDiffApp/android/settings.gradle b/RnDiffApp/android/settings.gradle
index 73a47b2ed..2c19646a3 100644
--- a/RnDiffApp/android/settings.gradle
+++ b/RnDiffApp/android/settings.gradle
@@ -1,3 +1,11 @@
 rootProject.name = 'RnDiffApp'
 apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)
 include ':app'
+includeBuild('../node_modules/react-native-gradle-plugin')
+
+if (settings.hasProperty("newArchEnabled") && settings.newArchEnabled == "true") {
+    include(":ReactAndroid")
+    project(":ReactAndroid").projectDir = file('../node_modules/react-native/ReactAndroid')
+    include(":ReactAndroid:hermes-engine")
+    project(":ReactAndroid:hermes-engine").projectDir = file('../node_modules/react-native/ReactAndroid/hermes-engine')
+}
diff --git a/RnDiffApp/ios/.xcode.env b/RnDiffApp/ios/.xcode.env
new file mode 100644
index 000000000..3d5782c71
--- /dev/null
+++ b/RnDiffApp/ios/.xcode.env
@@ -0,0 +1,11 @@
+# This `.xcode.env` file is versioned and is used to source the environment
+# used when running script phases inside Xcode.
+# To customize your local environment, you can create an `.xcode.env.local`
+# file that is not versioned.
+
+# NODE_BINARY variable contains the PATH to the node executable.
+#
+# Customize the NODE_BINARY variable here.
+# For example, to use nvm with brew, add the following line
+# . "$(brew --prefix nvm)/nvm.sh" --no-use
+export NODE_BINARY=$(command -v node)
diff --git a/RnDiffApp/ios/Podfile b/RnDiffApp/ios/Podfile
index d1ca6c9c9..dc52b7307 100644
--- a/RnDiffApp/ios/Podfile
+++ b/RnDiffApp/ios/Podfile
@@ -3,48 +3,61 @@ require_relative '../node_modules/@react-native-community/cli-platform-ios/nativ
 
 source 'https://github.com/react-native-tvos/react-native-tvos-podspecs.git'
 source 'https://cdn.cocoapods.org/'
+install! 'cocoapods', :deterministic_uuids => false
+
+production = ENV["PRODUCTION"] == "1"
 
 target 'RnDiffApp' do
 
-  platform :ios, '10.0'
+  platform :ios, '12.4'
 
   config = use_native_modules!
 
-  use_react_native!(:path => config["reactNativePath"])
+  # Flags change depending on the env values.
+  flags = get_default_flags()
 
-  use_flipper_tvos!
-# If you want to use Flipper only for iOS, you can replace the line above with
-#
-# use_flipper!
-#
-# to pick up newer Flipper pods used in RN core 0.63.
-# They have not yet been adapted to work in tvOS.
-# use_flipper_tvos! works for both iOS and tvOS.
+  use_react_native!(
+    :path => config[:reactNativePath],
+    # to enable hermes on iOS, change `false` to `true` and then install pods
+    :production => production,
+    :hermes_enabled => flags[:hermes_enabled],
+    :fabric_enabled => flags[:fabric_enabled],
+    :flipper_configuration => FlipperConfiguration.enabled,
+    # An absolute path to your application root.
+    :app_path => "#{Pod::Config.instance.installation_root}/.."
+  )
 
   target 'RnDiffAppTests' do
     inherit! :complete
     # Pods for testing
   end
-
 end
 
 target 'RnDiffApp-tvOS' do
 
-  platform :tvos, '12.0'
+  platform :tvos, '12.4'
 
   config = use_native_modules!
 
-  use_react_native!(:path => config["reactNativePath"])
+  # Flags change depending on the env values.
+  flags = get_default_flags()
 
-  use_flipper_tvos!
+  use_react_native!(
+    :path => config[:reactNativePath],
+    # Hermes not yet available on tvOS
+    :hermes_enabled => false,
+    :fabric_enabled => flags[:fabric_enabled],
+    # An absolute path to your application root.
+    :app_path => "#{Dir.pwd}/.."
+  )
 
   target 'RnDiffApp-tvOSTests' do
     inherit! :complete
     # Pods for testing
   end
-
 end
 
 post_install do |installer|
-  flipper_post_install(installer)
+  react_native_post_install(installer)
+  __apply_Xcode_12_5_M1_post_install_workaround(installer)
 end
diff --git a/RnDiffApp/ios/RnDiffApp-tvOS/Info.plist b/RnDiffApp/ios/RnDiffApp-tvOS/Info.plist
index ecbd496be..a360b5e13 100644
--- a/RnDiffApp/ios/RnDiffApp-tvOS/Info.plist
+++ b/RnDiffApp/ios/RnDiffApp-tvOS/Info.plist
@@ -50,4 +50,4 @@
 	<key>UIViewControllerBasedStatusBarAppearance</key>
 	<false/>
 </dict>
-</plist>
+</plist>
\ No newline at end of file
diff --git a/RnDiffApp/ios/RnDiffApp-tvOSTests/Info.plist b/RnDiffApp/ios/RnDiffApp-tvOSTests/Info.plist
index ba72822e8..07d6a2119 100644
--- a/RnDiffApp/ios/RnDiffApp-tvOSTests/Info.plist
+++ b/RnDiffApp/ios/RnDiffApp-tvOSTests/Info.plist
@@ -21,4 +21,4 @@
 	<key>CFBundleVersion</key>
 	<string>1</string>
 </dict>
-</plist>
+</plist>
\ No newline at end of file
diff --git a/RnDiffApp/ios/RnDiffApp.xcodeproj/project.pbxproj b/RnDiffApp/ios/RnDiffApp.xcodeproj/project.pbxproj
index 683bbdfe3..9e74cb094 100644
--- a/RnDiffApp/ios/RnDiffApp.xcodeproj/project.pbxproj
+++ b/RnDiffApp/ios/RnDiffApp.xcodeproj/project.pbxproj
@@ -8,11 +8,11 @@
 
 /* Begin PBXBuildFile section */
 		00E356F31AD99517003FC87E /* RnDiffAppTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* RnDiffAppTests.m */; };
-		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
+		13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
 		269984920579226908D49904 /* libPods-RnDiffApp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 8DC2855AB2CCC04BED0978AE /* libPods-RnDiffApp.a */; };
-		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
+		2D02E4BC1E0B4A80006451C7 /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
 		2DCD954D1E0B4F2C00145EB5 /* RnDiffAppTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* RnDiffAppTests.m */; };
@@ -47,7 +47,7 @@
 		015BA46D04C1496C29E63456 /* Pods-RnDiffApp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-RnDiffApp.debug.xcconfig"; path = "Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp.debug.xcconfig"; sourceTree = "<group>"; };
 		13B07F961A680F5B00A75B9A /* RnDiffApp.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = RnDiffApp.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = RnDiffApp/AppDelegate.h; sourceTree = "<group>"; };
-		13B07FB01A68108700A75B9A /* AppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.m; path = RnDiffApp/AppDelegate.m; sourceTree = "<group>"; };
+		13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.mm; path = RnDiffApp/AppDelegate.mm; sourceTree = "<group>"; };
 		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = RnDiffApp/Images.xcassets; sourceTree = "<group>"; };
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = RnDiffApp/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = RnDiffApp/main.m; sourceTree = "<group>"; };
@@ -127,7 +127,7 @@
 			children = (
 				008F07F21AC5B25A0029DE68 /* main.jsbundle */,
 				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
-				13B07FB01A68108700A75B9A /* AppDelegate.m */,
+				13B07FB01A68108700A75B9A /* AppDelegate.mm */,
 				13B07FB51A68108700A75B9A /* Images.xcassets */,
 				13B07FB61A68108700A75B9A /* Info.plist */,
 				81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */,
@@ -209,6 +209,7 @@
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
 				D9B6B751E2AEDF3F7AB29F2D /* [CP] Copy Pods Resources */,
+				A7BC8AD5F38E060ECF380790 /* [CP] Embed Pods Frameworks */,
 			);
 			buildRules = (
 			);
@@ -231,6 +232,7 @@
 				13B07F8E1A680F5B00A75B9A /* Resources */,
 				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
 				0D7507D506130F6246FD97BE /* [CP] Copy Pods Resources */,
+				2D0FE9B0618B7653931FB828 /* [CP] Embed Pods Frameworks */,
 			);
 			buildRules = (
 			);
@@ -309,7 +311,7 @@
 				};
 			};
 			buildConfigurationList = 83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "RnDiffApp" */;
-			compatibilityVersion = "Xcode 3.2";
+			compatibilityVersion = "Xcode 12.0";
 			developmentRegion = en;
 			hasScannedForEncodings = 0;
 			knownRegions = (
@@ -370,26 +372,27 @@
 			files = (
 			);
 			inputPaths = (
+				"$(SRCROOT)/.xcode.env.local",
+				"$(SRCROOT)/.xcode.env",
 			);
 			name = "Bundle React Native code and images";
 			outputPaths = (
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
+			shellScript = "set -e\n\nWITH_ENVIRONMENT=\"../node_modules/react-native/scripts/xcode/with-environment.sh\"\nREACT_NATIVE_XCODE=\"../node_modules/react-native/scripts/react-native-xcode.sh\"\n\n/bin/sh -c \"$WITH_ENVIRONMENT $REACT_NATIVE_XCODE\"\n";
 		};
 		0D7507D506130F6246FD97BE /* [CP] Copy Pods Resources */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
-			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp-resources.sh",
-				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core-iOS/AccessibilityResources.bundle",
+			inputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp-resources-${CONFIGURATION}-input-files.xcfilelist",
 			);
 			name = "[CP] Copy Pods Resources";
-			outputPaths = (
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
+			outputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp-resources-${CONFIGURATION}-output-files.xcfilelist",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
@@ -410,18 +413,34 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
+		2D0FE9B0618B7653931FB828 /* [CP] Embed Pods Frameworks */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp-frameworks-${CONFIGURATION}-input-files.xcfilelist",
+			);
+			name = "[CP] Embed Pods Frameworks";
+			outputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp-frameworks-${CONFIGURATION}-output-files.xcfilelist",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp-frameworks.sh\"\n";
+			showEnvVarsInLog = 0;
+		};
 		42686649B799B0EA1ADB4648 /* [CP] Copy Pods Resources */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
-			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-tvOS/Pods-RnDiffApp-tvOS-resources.sh",
-				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core-tvOS/AccessibilityResources.bundle",
+			inputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-tvOS/Pods-RnDiffApp-tvOS-resources-${CONFIGURATION}-input-files.xcfilelist",
 			);
 			name = "[CP] Copy Pods Resources";
-			outputPaths = (
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
+			outputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-tvOS/Pods-RnDiffApp-tvOS-resources-${CONFIGURATION}-output-files.xcfilelist",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
@@ -455,13 +474,12 @@
 			buildActionMask = 2147483647;
 			files = (
 			);
-			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-tvOS-RnDiffApp-tvOSTests/Pods-RnDiffApp-tvOS-RnDiffApp-tvOSTests-resources.sh",
-				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core-tvOS/AccessibilityResources.bundle",
+			inputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-tvOS-RnDiffApp-tvOSTests/Pods-RnDiffApp-tvOS-RnDiffApp-tvOSTests-resources-${CONFIGURATION}-input-files.xcfilelist",
 			);
 			name = "[CP] Copy Pods Resources";
-			outputPaths = (
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
+			outputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-tvOS-RnDiffApp-tvOSTests/Pods-RnDiffApp-tvOS-RnDiffApp-tvOSTests-resources-${CONFIGURATION}-output-files.xcfilelist",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
@@ -490,6 +508,23 @@
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
+		A7BC8AD5F38E060ECF380790 /* [CP] Embed Pods Frameworks */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-frameworks-${CONFIGURATION}-input-files.xcfilelist",
+			);
+			name = "[CP] Embed Pods Frameworks";
+			outputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-frameworks-${CONFIGURATION}-output-files.xcfilelist",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-frameworks.sh\"\n";
+			showEnvVarsInLog = 0;
+		};
 		BC8CB606DF6125BE2BCE6F48 /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -539,13 +574,12 @@
 			buildActionMask = 2147483647;
 			files = (
 			);
-			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-resources.sh",
-				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core-iOS/AccessibilityResources.bundle",
+			inputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-resources-${CONFIGURATION}-input-files.xcfilelist",
 			);
 			name = "[CP] Copy Pods Resources";
-			outputPaths = (
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
+			outputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-resources-${CONFIGURATION}-output-files.xcfilelist",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
@@ -605,7 +639,7 @@
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */,
+				13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,
 				13B07FC11A68108700A75B9A /* main.m in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -615,7 +649,7 @@
 			buildActionMask = 2147483647;
 			files = (
 				2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */,
-				2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */,
+				2D02E4BC1E0B4A80006451C7 /* AppDelegate.mm in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -653,7 +687,7 @@
 					"$(inherited)",
 				);
 				INFOPLIST_FILE = RnDiffAppTests/Info.plist;
-				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.4;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -673,7 +707,7 @@
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				COPY_PHASE_STRIP = NO;
 				INFOPLIST_FILE = RnDiffAppTests/Info.plist;
-				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.4;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -697,10 +731,9 @@
 				GCC_PREPROCESSOR_DEFINITIONS = (
 					"$(inherited)",
 					"COCOAPODS=1",
-					"FB_SONARKIT_ENABLED=1",
 				);
 				INFOPLIST_FILE = RnDiffApp/Info.plist;
-				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
+				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				OTHER_LDFLAGS = (
 					"$(inherited)",
 					"-ObjC",
@@ -722,7 +755,7 @@
 				CLANG_ENABLE_MODULES = YES;
 				CURRENT_PROJECT_VERSION = 1;
 				INFOPLIST_FILE = RnDiffApp/Info.plist;
-				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
+				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				OTHER_LDFLAGS = (
 					"$(inherited)",
 					"-ObjC",
@@ -750,7 +783,7 @@
 				ENABLE_TESTABILITY = YES;
 				GCC_NO_COMMON_BLOCKS = YES;
 				INFOPLIST_FILE = "RnDiffApp-tvOS/Info.plist";
-				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
+				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				OTHER_LDFLAGS = (
 					"$(inherited)",
 					"-ObjC",
@@ -760,7 +793,7 @@
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
-				TVOS_DEPLOYMENT_TARGET = 10.0;
+				TVOS_DEPLOYMENT_TARGET = 12.4;
 			};
 			name = Debug;
 		};
@@ -779,7 +812,7 @@
 				ENABLE_BITCODE = YES;
 				GCC_NO_COMMON_BLOCKS = YES;
 				INFOPLIST_FILE = "RnDiffApp-tvOS/Info.plist";
-				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
+				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				OTHER_LDFLAGS = (
 					"$(inherited)",
 					"-ObjC",
@@ -789,7 +822,7 @@
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
-				TVOS_DEPLOYMENT_TARGET = 10.0;
+				TVOS_DEPLOYMENT_TARGET = 12.4;
 			};
 			name = Release;
 		};
@@ -816,7 +849,7 @@
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/RnDiffApp-tvOS.app/RnDiffApp-tvOS";
-				TVOS_DEPLOYMENT_TARGET = 10.1;
+				TVOS_DEPLOYMENT_TARGET = 12.4;
 			};
 			name = Debug;
 		};
@@ -843,7 +876,7 @@
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/RnDiffApp-tvOS.app/RnDiffApp-tvOS";
-				TVOS_DEPLOYMENT_TARGET = 10.1;
+				TVOS_DEPLOYMENT_TARGET = 12.4;
 			};
 			name = Release;
 		};
@@ -852,7 +885,7 @@
 			buildSettings = {
 				ALWAYS_SEARCH_USER_PATHS = NO;
 				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
-				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
+				CLANG_CXX_LANGUAGE_STANDARD = "c++17";
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
@@ -879,6 +912,7 @@
 				COPY_PHASE_STRIP = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
 				ENABLE_TESTABILITY = YES;
+				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = i386;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
 				GCC_DYNAMIC_NO_PIC = NO;
 				GCC_NO_COMMON_BLOCKS = YES;
@@ -894,11 +928,11 @@
 				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
 				GCC_WARN_UNUSED_FUNCTION = YES;
 				GCC_WARN_UNUSED_VARIABLE = YES;
-				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.4;
 				LD_RUNPATH_SEARCH_PATHS = "/usr/lib/swift $(inherited)";
 				LIBRARY_SEARCH_PATHS = (
+					"$(SDKROOT)/usr/lib/swift",
 					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
-					"\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"",
 					"\"$(inherited)\"",
 				);
 				MTL_ENABLE_DEBUG_INFO = YES;
@@ -939,6 +973,7 @@
 				COPY_PHASE_STRIP = YES;
 				ENABLE_NS_ASSERTIONS = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = i386;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
 				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
@@ -947,11 +982,11 @@
 				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
 				GCC_WARN_UNUSED_FUNCTION = YES;
 				GCC_WARN_UNUSED_VARIABLE = YES;
-				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.4;
 				LD_RUNPATH_SEARCH_PATHS = "/usr/lib/swift $(inherited)";
 				LIBRARY_SEARCH_PATHS = (
+					"$(SDKROOT)/usr/lib/swift",
 					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
-					"\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"",
 					"\"$(inherited)\"",
 				);
 				MTL_ENABLE_DEBUG_INFO = NO;
diff --git a/RnDiffApp/ios/RnDiffApp.xcodeproj/xcshareddata/xcschemes/RnDiffApp-tvOS.xcscheme b/RnDiffApp/ios/RnDiffApp.xcodeproj/xcshareddata/xcschemes/RnDiffApp-tvOS.xcscheme
index 39ea48eb9..701bd9722 100644
--- a/RnDiffApp/ios/RnDiffApp.xcodeproj/xcshareddata/xcschemes/RnDiffApp-tvOS.xcscheme
+++ b/RnDiffApp/ios/RnDiffApp.xcodeproj/xcshareddata/xcschemes/RnDiffApp-tvOS.xcscheme
@@ -85,4 +85,4 @@
       buildConfiguration = "Release"
       revealArchiveInOrganizer = "YES">
    </ArchiveAction>
-</Scheme>
+</Scheme>
\ No newline at end of file
diff --git a/RnDiffApp/ios/RnDiffApp.xcodeproj/xcshareddata/xcschemes/RnDiffApp.xcscheme b/RnDiffApp/ios/RnDiffApp.xcodeproj/xcshareddata/xcschemes/RnDiffApp.xcscheme
index d7445abc1..e1d631ba5 100644
--- a/RnDiffApp/ios/RnDiffApp.xcodeproj/xcshareddata/xcschemes/RnDiffApp.xcscheme
+++ b/RnDiffApp/ios/RnDiffApp.xcodeproj/xcshareddata/xcschemes/RnDiffApp.xcscheme
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Scheme
-   LastUpgradeVersion = "1130"
+   LastUpgradeVersion = "1210"
    version = "1.3">
    <BuildAction
       parallelizeBuildables = "YES"
diff --git a/RnDiffApp/ios/RnDiffApp/AppDelegate.m b/RnDiffApp/ios/RnDiffApp/AppDelegate.m
deleted file mode 100644
index 8a7cfe81a..000000000
--- a/RnDiffApp/ios/RnDiffApp/AppDelegate.m
+++ /dev/null
@@ -1,58 +0,0 @@
-#import "AppDelegate.h"
-
-#import <React/RCTBridge.h>
-#import <React/RCTBundleURLProvider.h>
-#import <React/RCTRootView.h>
-
-#ifdef FB_SONARKIT_ENABLED
-#import <FlipperKit/FlipperClient.h>
-#import <FlipperKitLayoutPlugin/FlipperKitLayoutPlugin.h>
-#import <FlipperKitUserDefaultsPlugin/FKUserDefaultsPlugin.h>
-#import <FlipperKitNetworkPlugin/FlipperKitNetworkPlugin.h>
-#import <SKIOSNetworkPlugin/SKIOSNetworkAdapter.h>
-#import <FlipperKitReactPlugin/FlipperKitReactPlugin.h>
-
-static void InitializeFlipper(UIApplication *application) {
-  FlipperClient *client = [FlipperClient sharedClient];
-  SKDescriptorMapper *layoutDescriptorMapper = [[SKDescriptorMapper alloc] initWithDefaults];
-  [client addPlugin:[[FlipperKitLayoutPlugin alloc] initWithRootNode:application withDescriptorMapper:layoutDescriptorMapper]];
-  [client addPlugin:[[FKUserDefaultsPlugin alloc] initWithSuiteName:nil]];
-  [client addPlugin:[FlipperKitReactPlugin new]];
-  [client addPlugin:[[FlipperKitNetworkPlugin alloc] initWithNetworkAdapter:[SKIOSNetworkAdapter new]]];
-  [client start];
-}
-#endif
-
-@implementation AppDelegate
-
-- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
-{
-#ifdef FB_SONARKIT_ENABLED
-  InitializeFlipper(application);
-#endif
-
-  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];
-  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge
-                                                   moduleName:@"RnDiffApp"
-                                            initialProperties:nil];
-
-  rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];
-
-  self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
-  UIViewController *rootViewController = [UIViewController new];
-  rootViewController.view = rootView;
-  self.window.rootViewController = rootViewController;
-  [self.window makeKeyAndVisible];
-  return YES;
-}
-
-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
-{
-#if DEBUG
-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
-#else
-  return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
-#endif
-}
-
-@end
diff --git a/RnDiffApp/ios/RnDiffApp/AppDelegate.mm b/RnDiffApp/ios/RnDiffApp/AppDelegate.mm
new file mode 100644
index 000000000..7c0f21a90
--- /dev/null
+++ b/RnDiffApp/ios/RnDiffApp/AppDelegate.mm
@@ -0,0 +1,136 @@
+#import "AppDelegate.h"
+
+#import <React/RCTBridge.h>
+#import <React/RCTBundleURLProvider.h>
+#import <React/RCTRootView.h>
+
+#import <React/RCTAppSetupUtils.h>
+
+#if RCT_NEW_ARCH_ENABLED
+#import <React/CoreModulesPlugins.h>
+#import <React/RCTCxxBridgeDelegate.h>
+#import <React/RCTFabricSurfaceHostingProxyRootView.h>
+#import <React/RCTSurfacePresenter.h>
+#import <React/RCTSurfacePresenterBridgeAdapter.h>
+#import <ReactCommon/RCTTurboModuleManager.h>
+
+#import <react/config/ReactNativeConfig.h>
+
+static NSString *const kRNConcurrentRoot = @"concurrentRoot";
+
+@interface AppDelegate () <RCTCxxBridgeDelegate, RCTTurboModuleManagerDelegate> {
+  RCTTurboModuleManager *_turboModuleManager;
+  RCTSurfacePresenterBridgeAdapter *_bridgeAdapter;
+  std::shared_ptr<const facebook::react::ReactNativeConfig> _reactNativeConfig;
+  facebook::react::ContextContainer::Shared _contextContainer;
+}
+@end
+#endif
+
+@implementation AppDelegate
+
+- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
+{
+  RCTAppSetupPrepareApp(application);
+
+  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];
+
+#if RCT_NEW_ARCH_ENABLED
+  _contextContainer = std::make_shared<facebook::react::ContextContainer const>();
+  _reactNativeConfig = std::make_shared<facebook::react::EmptyReactNativeConfig const>();
+  _contextContainer->insert("ReactNativeConfig", _reactNativeConfig);
+  _bridgeAdapter = [[RCTSurfacePresenterBridgeAdapter alloc] initWithBridge:bridge contextContainer:_contextContainer];
+  bridge.surfacePresenter = _bridgeAdapter.surfacePresenter;
+#endif
+
+  NSDictionary *initProps = [self prepareInitialProps];
+  UIView *rootView = RCTAppSetupDefaultRootView(bridge, @"RnDiffApp", initProps);
+
+#if !TARGET_OS_TV
+  if (@available(iOS 13.0, *)) {
+      rootView.backgroundColor = [UIColor systemBackgroundColor];
+  } else
+#endif
+  {
+      rootView.backgroundColor = [UIColor whiteColor];
+  }
+
+  self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
+  UIViewController *rootViewController = [UIViewController new];
+  rootViewController.view = rootView;
+  self.window.rootViewController = rootViewController;
+  [self.window makeKeyAndVisible];
+  return YES;
+}
+
+/// This method controls whether the `concurrentRoot`feature of React18 is turned on or off.
+///
+/// @see: https://reactjs.org/blog/2022/03/29/react-v18.html
+/// @note: This requires to be rendering on Fabric (i.e. on the New Architecture).
+/// @return: `true` if the `concurrentRoot` feture is enabled. Otherwise, it returns `false`.
+- (BOOL)concurrentRootEnabled
+{
+  // Switch this bool to turn on and off the concurrent root
+  return true;
+}
+
+- (NSDictionary *)prepareInitialProps
+{
+  NSMutableDictionary *initProps = [NSMutableDictionary new];
+
+#ifdef RCT_NEW_ARCH_ENABLED
+  initProps[kRNConcurrentRoot] = @([self concurrentRootEnabled]);
+#endif
+
+  return initProps;
+}
+
+- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
+{
+#if DEBUG
+  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index"];
+#else
+  return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
+#endif
+}
+
+#if RCT_NEW_ARCH_ENABLED
+
+#pragma mark - RCTCxxBridgeDelegate
+
+- (std::unique_ptr<facebook::react::JSExecutorFactory>)jsExecutorFactoryForBridge:(RCTBridge *)bridge
+{
+  _turboModuleManager = [[RCTTurboModuleManager alloc] initWithBridge:bridge
+                                                             delegate:self
+                                                            jsInvoker:bridge.jsCallInvoker];
+  return RCTAppSetupDefaultJsExecutorFactory(bridge, _turboModuleManager);
+}
+
+#pragma mark RCTTurboModuleManagerDelegate
+
+- (Class)getModuleClassFromName:(const char *)name
+{
+  return RCTCoreModulesClassProvider(name);
+}
+
+- (std::shared_ptr<facebook::react::TurboModule>)getTurboModule:(const std::string &)name
+                                                      jsInvoker:(std::shared_ptr<facebook::react::CallInvoker>)jsInvoker
+{
+  return nullptr;
+}
+
+- (std::shared_ptr<facebook::react::TurboModule>)getTurboModule:(const std::string &)name
+                                                     initParams:
+                                                         (const facebook::react::ObjCTurboModule::InitParams &)params
+{
+  return nullptr;
+}
+
+- (id<RCTTurboModule>)getModuleInstanceFromClass:(Class)moduleClass
+{
+  return RCTAppSetupDefaultModuleFromClass(moduleClass);
+}
+
+#endif
+
+@end
diff --git a/RnDiffApp/ios/RnDiffApp/Images.xcassets/AppIcon.appiconset/Contents.json b/RnDiffApp/ios/RnDiffApp/Images.xcassets/AppIcon.appiconset/Contents.json
index 118c98f74..81213230d 100644
--- a/RnDiffApp/ios/RnDiffApp/Images.xcassets/AppIcon.appiconset/Contents.json
+++ b/RnDiffApp/ios/RnDiffApp/Images.xcassets/AppIcon.appiconset/Contents.json
@@ -2,37 +2,52 @@
   "images" : [
     {
       "idiom" : "iphone",
-      "size" : "29x29",
-      "scale" : "2x"
+      "scale" : "2x",
+      "size" : "20x20"
     },
     {
       "idiom" : "iphone",
-      "size" : "29x29",
-      "scale" : "3x"
+      "scale" : "3x",
+      "size" : "20x20"
     },
     {
       "idiom" : "iphone",
-      "size" : "40x40",
-      "scale" : "2x"
+      "scale" : "2x",
+      "size" : "29x29"
     },
     {
       "idiom" : "iphone",
-      "size" : "40x40",
-      "scale" : "3x"
+      "scale" : "3x",
+      "size" : "29x29"
     },
     {
       "idiom" : "iphone",
-      "size" : "60x60",
-      "scale" : "2x"
+      "scale" : "2x",
+      "size" : "40x40"
     },
     {
       "idiom" : "iphone",
-      "size" : "60x60",
-      "scale" : "3x"
+      "scale" : "3x",
+      "size" : "40x40"
+    },
+    {
+      "idiom" : "iphone",
+      "scale" : "2x",
+      "size" : "60x60"
+    },
+    {
+      "idiom" : "iphone",
+      "scale" : "3x",
+      "size" : "60x60"
+    },
+    {
+      "idiom" : "ios-marketing",
+      "scale" : "1x",
+      "size" : "1024x1024"
     }
   ],
   "info" : {
-    "version" : 1,
-    "author" : "xcode"
+    "author" : "xcode",
+    "version" : 1
   }
-}
\ No newline at end of file
+}
diff --git a/RnDiffApp/ios/RnDiffApp/Info.plist b/RnDiffApp/ios/RnDiffApp/Info.plist
index 1e7814116..903b7921c 100644
--- a/RnDiffApp/ios/RnDiffApp/Info.plist
+++ b/RnDiffApp/ios/RnDiffApp/Info.plist
@@ -26,8 +26,6 @@
 	<true/>
 	<key>NSAppTransportSecurity</key>
 	<dict>
-		<key>NSAllowsArbitraryLoads</key>
-		<true/>
 		<key>NSExceptionDomains</key>
 		<dict>
 			<key>localhost</key>
diff --git a/RnDiffApp/ios/RnDiffApp/LaunchScreen.storyboard b/RnDiffApp/ios/RnDiffApp/LaunchScreen.storyboard
index 105a4fa5b..8f74d3c92 100644
--- a/RnDiffApp/ios/RnDiffApp/LaunchScreen.storyboard
+++ b/RnDiffApp/ios/RnDiffApp/LaunchScreen.storyboard
@@ -16,32 +16,21 @@
                         <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                         <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                         <subviews>
-                            <label opaque="NO" clipsSubviews="YES" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" minimumFontSize="9" translatesAutoresizingMaskIntoConstraints="NO" id="obG-Y5-kRd">
-                                <rect key="frame" x="0.0" y="647" width="375" height="0.0"/>
-                                <fontDescription key="fontDescription" type="system" pointSize="17"/>
-                                <color key="textColor" red="0.0" green="0.0" blue="0.0" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
-                                <nil key="highlightedColor"/>
-                            </label>
                             <label opaque="NO" clipsSubviews="YES" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="RnDiffApp" textAlignment="center" lineBreakMode="middleTruncation" baselineAdjustment="alignBaselines" minimumFontSize="18" translatesAutoresizingMaskIntoConstraints="NO" id="GJd-Yh-RWb">
                                 <rect key="frame" x="0.0" y="202" width="375" height="43"/>
                                 <fontDescription key="fontDescription" type="boldSystem" pointSize="36"/>
-                                <color key="textColor" red="0.0" green="0.0" blue="0.0" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
                                 <nil key="highlightedColor"/>
                             </label>
                             <label opaque="NO" clipsSubviews="YES" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Powered by React Native" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" minimumFontSize="9" translatesAutoresizingMaskIntoConstraints="NO" id="MN2-I3-ftu">
                                 <rect key="frame" x="0.0" y="626" width="375" height="21"/>
                                 <fontDescription key="fontDescription" type="system" pointSize="17"/>
-                                <color key="textColor" cocoaTouchSystemColor="darkTextColor"/>
                                 <nil key="highlightedColor"/>
                             </label>
                         </subviews>
-                        <color key="backgroundColor" red="1" green="1" blue="1" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
+                        <color key="backgroundColor" systemColor="systemBackgroundColor" cocoaTouchSystemColor="whiteColor"/>
                         <constraints>
-                            <constraint firstItem="Bcu-3y-fUS" firstAttribute="centerX" secondItem="obG-Y5-kRd" secondAttribute="centerX" id="5cz-MP-9tL"/>
                             <constraint firstItem="Bcu-3y-fUS" firstAttribute="bottom" secondItem="MN2-I3-ftu" secondAttribute="bottom" constant="20" id="OZV-Vh-mqD"/>
                             <constraint firstItem="Bcu-3y-fUS" firstAttribute="centerX" secondItem="GJd-Yh-RWb" secondAttribute="centerX" id="Q3B-4B-g5h"/>
-                            <constraint firstItem="obG-Y5-kRd" firstAttribute="leading" secondItem="Bcu-3y-fUS" secondAttribute="leading" symbolic="YES" id="SfN-ll-jLj"/>
-                            <constraint firstAttribute="bottom" secondItem="obG-Y5-kRd" secondAttribute="bottom" constant="20" id="Y44-ml-fuU"/>
                             <constraint firstItem="MN2-I3-ftu" firstAttribute="centerX" secondItem="Bcu-3y-fUS" secondAttribute="centerX" id="akx-eg-2ui"/>
                             <constraint firstItem="MN2-I3-ftu" firstAttribute="leading" secondItem="Bcu-3y-fUS" secondAttribute="leading" id="i1E-0Y-4RG"/>
                             <constraint firstItem="GJd-Yh-RWb" firstAttribute="centerY" secondItem="Ze5-6b-2t3" secondAttribute="bottom" multiplier="1/3" constant="1" id="moa-c2-u7t"/>
diff --git a/RnDiffApp/ios/RnDiffApp/main.m b/RnDiffApp/ios/RnDiffApp/main.m
index b1df44b95..d645c7246 100644
--- a/RnDiffApp/ios/RnDiffApp/main.m
+++ b/RnDiffApp/ios/RnDiffApp/main.m
@@ -2,7 +2,8 @@
 
 #import "AppDelegate.h"
 
-int main(int argc, char * argv[]) {
+int main(int argc, char *argv[])
+{
   @autoreleasepool {
     return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));
   }
diff --git a/RnDiffApp/ios/RnDiffAppTests/RnDiffAppTests.m b/RnDiffApp/ios/RnDiffAppTests/RnDiffAppTests.m
index fe83ad244..fae48110a 100644
--- a/RnDiffApp/ios/RnDiffAppTests/RnDiffAppTests.m
+++ b/RnDiffApp/ios/RnDiffAppTests/RnDiffAppTests.m
@@ -13,7 +13,7 @@
 
 @implementation RnDiffAppTests
 
-- (BOOL)findSubviewInView:(UIView *)view matching:(BOOL(^)(UIView *view))test
+- (BOOL)findSubviewInView:(UIView *)view matching:(BOOL (^)(UIView *view))test
 {
   if (test(view)) {
     return YES;
@@ -34,23 +34,25 @@
 
   __block NSString *redboxError = nil;
 #ifdef DEBUG
-  RCTSetLogFunction(^(RCTLogLevel level, RCTLogSource source, NSString *fileName, NSNumber *lineNumber, NSString *message) {
-    if (level >= RCTLogLevelError) {
-      redboxError = message;
-    }
-  });
+  RCTSetLogFunction(
+      ^(RCTLogLevel level, RCTLogSource source, NSString *fileName, NSNumber *lineNumber, NSString *message) {
+        if (level >= RCTLogLevelError) {
+          redboxError = message;
+        }
+      });
 #endif
 
   while ([date timeIntervalSinceNow] > 0 && !foundElement && !redboxError) {
     [[NSRunLoop mainRunLoop] runMode:NSDefaultRunLoopMode beforeDate:[NSDate dateWithTimeIntervalSinceNow:0.1]];
     [[NSRunLoop mainRunLoop] runMode:NSRunLoopCommonModes beforeDate:[NSDate dateWithTimeIntervalSinceNow:0.1]];
 
-    foundElement = [self findSubviewInView:vc.view matching:^BOOL(UIView *view) {
-      if ([view.accessibilityLabel isEqualToString:TEXT_TO_LOOK_FOR]) {
-        return YES;
-      }
-      return NO;
-    }];
+    foundElement = [self findSubviewInView:vc.view
+                                  matching:^BOOL(UIView *view) {
+                                    if ([view.accessibilityLabel isEqualToString:TEXT_TO_LOOK_FOR]) {
+                                      return YES;
+                                    }
+                                    return NO;
+                                  }];
   }
 
 #ifdef DEBUG
@@ -61,5 +63,4 @@
   XCTAssertTrue(foundElement, @"Couldn't find element with text '%@' in %d seconds", TEXT_TO_LOOK_FOR, TIMEOUT_SECONDS);
 }
 
-
 @end
diff --git a/RnDiffApp/metro.config.js b/RnDiffApp/metro.config.js
index 13a964217..e91aba937 100644
--- a/RnDiffApp/metro.config.js
+++ b/RnDiffApp/metro.config.js
@@ -10,7 +10,7 @@ module.exports = {
     getTransformOptions: async () => ({
       transform: {
         experimentalImportSupport: false,
-        inlineRequires: false,
+        inlineRequires: true,
       },
     }),
   },
diff --git a/RnDiffApp/package.json b/RnDiffApp/package.json
index 30f2a14d2..848a8a114 100644
--- a/RnDiffApp/package.json
+++ b/RnDiffApp/package.json
@@ -10,18 +10,18 @@
     "lint": "eslint ."
   },
   "dependencies": {
-    "react": "16.13.1",
-    "react-native": "npm:react-native-tvos@0.63.1-2"
+    "react": "18.0.0",
+    "react-native": "npm:react-native-tvos@0.69.8-2"
   },
   "devDependencies": {
-    "@babel/core": "^7.8.4",
-    "@babel/runtime": "^7.8.4",
-    "@react-native-community/eslint-config": "^1.1.0",
-    "babel-jest": "^25.1.0",
-    "eslint": "^6.5.1",
-    "jest": "^25.1.0",
-    "metro-react-native-babel-preset": "^0.59.0",
-    "react-test-renderer": "16.13.1"
+    "@babel/core": "^7.12.9",
+    "@babel/runtime": "^7.12.5",
+    "@react-native-community/eslint-config": "^2.0.0",
+    "babel-jest": "^26.6.3",
+    "eslint": "^7.32.0",
+    "jest": "^26.6.3",
+    "metro-react-native-babel-preset": "^0.70.3",
+    "react-test-renderer": "18.0.0"
   },
   "jest": {
     "preset": "react-native"
